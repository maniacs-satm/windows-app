<Page
    x:Class="wallabag.Views.SingleItemPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="using:wallabag.Common"
    xmlns:controls="using:wallabag.Controls"
    xmlns:converter="using:wallabag.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:wallabag.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:wallabag.ViewModels"
    common:TitleBarExtensions.BackgroundColor="{x:Bind ViewModel.CurrentBackground.Color, Mode=OneWay}"
    common:TitleBarExtensions.ButtonBackgroundColor="{x:Bind ViewModel.CurrentBackground.Color, Mode=OneWay}"
    common:TitleBarExtensions.ButtonForegroundColor="{x:Bind ViewModel.CurrentForeground.Color, Mode=OneWay}"
    common:TitleBarExtensions.ForegroundColor="{x:Bind ViewModel.CurrentForeground.Color, Mode=OneWay}"
    DataContext="{Binding SingleItem, Source={StaticResource Locator}}"
    mc:Ignorable="d">

    <Page.Resources>
        <converter:BooleanNullableConverter x:Key="BoolNullConverter" />
        <Storyboard x:Name="ShowContentStoryboard">
            <DoubleAnimation
                d:IsOptimized="True"
                Duration="0:0:0.3"
                Storyboard.TargetName="LoadingProgressRing"
                Storyboard.TargetProperty="(UIElement.Opacity)"
                To="0" />
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LoadingProgressRing" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation
                d:IsOptimized="True"
                Duration="0:0:0.3"
                Storyboard.TargetName="WebView"
                Storyboard.TargetProperty="(UIElement.Opacity)"
                To="1" />
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WebView" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="ShowFormattingOptionsGridStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FormattingOptionsGrid" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FormattingOptionsGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="commandBar" Storyboard.TargetProperty="(Control.IsEnabled)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <x:Boolean>False</x:Boolean>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="HideFormattingOptionsGridStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FormattingOptionsGrid" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FormattingOptionsGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="commandBar" Storyboard.TargetProperty="(Control.IsEnabled)">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                    <DiscreteObjectKeyFrame.Value>
                        <x:Boolean>True</x:Boolean>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
    </Page.Resources>

    <Page.BottomAppBar>
        <CommandBar
            x:Name="commandBar"
            Background="{x:Bind ViewModel.CurrentBackground, Mode=OneWay}"
            Foreground="{x:Bind ViewModel.CurrentForeground, Mode=OneWay}"
            ClosedDisplayMode="{x:Bind ViewModel.CommandBarClosedDisplayMode, Mode=OneWay}"
            RequestedTheme="{x:Bind ViewModel.AppBarRequestedTheme, Mode=OneWay}">
            <CommandBar.PrimaryCommands>
                <AppBarToggleButton
                    x:Name="MarkAsReadButton"
                    x:Uid="MarkAsReadAppBarButton"
                    Command="{x:Bind ViewModel.MarkItemAsReadCommand}"
                    Icon="{x:Bind ViewModel.CurrentItem.Model.IsRead, Mode=OneWay, Converter={StaticResource ReadToIconConverter}}"
                    IsChecked="{x:Bind ViewModel.CurrentItem.Model.IsRead, Mode=OneWay, Converter={StaticResource BoolNullConverter}}"
                    Label="Mark as read" />
                <AppBarToggleButton
                    x:Name="MarkAsFavoriteButton"
                    x:Uid="MarkAsFavoriteButton"
                    Command="{x:Bind ViewModel.CurrentItem.SwitchFavoriteStatusCommand, Mode=OneWay}"
                    Icon="{x:Bind ViewModel.CurrentItem.Model.IsStarred, Mode=OneWay, Converter={StaticResource FavoriteToIconConverter}}"
                    IsChecked="{x:Bind ViewModel.CurrentItem.Model.IsStarred, Mode=OneWay, Converter={StaticResource BoolNullConverter}}"
                    Label="Mark as favorite" />
                <AppBarButton
                    x:Uid="EditTagsAppBarButton"
                    Command="{x:Bind ViewModel.EditTagsCommand}"
                    Icon="Tag"
                    Label="Edit tags" />
                <AppBarButton
                    x:Uid="ShareAppBarButton"
                    Command="{x:Bind ViewModel.ShowShareUICommand}"
                    Label="Share">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE72D;" />
                    </AppBarButton.Icon>
                </AppBarButton>
            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
                <AppBarButton
                    x:Uid="FontSettingsAppBarButton"
                    Click="FontSettingsAppBarButton_Click"
                    Icon="Font"
                    Label="Font settings" />
                <AppBarSeparator />
                <AppBarButton
                    x:Uid="DeleteAppBarButton"
                    Command="{x:Bind ViewModel.CurrentItem.DeleteCommand}"
                    Label="Delete" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>

    <Grid Background="{x:Bind ViewModel.CurrentBackground, Mode=OneWay}" RequestedTheme="{x:Bind ViewModel.AppBarRequestedTheme, Mode=OneWay}">
        <WebView
            x:Name="WebView"
            Opacity="0"
            common:WebViewExtensions.HTML="{x:Bind ViewModel.CurrentItem.ContentWithHeader, Mode=OneWay}"
            RenderTransformOrigin="0.5,0.5"
            Visibility="Collapsed">
            <WebView.RenderTransform>
                <CompositeTransform />
            </WebView.RenderTransform>
        </WebView>
        <ProgressRing
            x:Name="LoadingProgressRing"
            Width="64"
            Height="64"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Foreground="{x:Bind ViewModel.CurrentForeground, Mode=OneWay}"
            d:IsHidden="True"
            IsActive="True" />
        <Border
            Background="{x:Bind ViewModel.CurrentBackground, Mode=OneWay}"
            d:IsHidden="True"
            RequestedTheme="{x:Bind ViewModel.AppBarRequestedTheme, Mode=OneWay}"
            Visibility="{x:Bind ViewModel.ErrorHappened, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock
                    x:Name="SymbolTextBlock"
                    Foreground="{x:Bind ViewModel.CurrentForeground, Mode=OneWay}"
                    FontSize="64"
                    Text=":-("
                    TextAlignment="Center" />
                <TextBlock
                    x:Name="errorHeaderTextBlock"
                    x:Uid="ErrorHeaderTextBlock"
                    Margin="8,16"
                    Style="{StaticResource TitleTextBlockStyle}"
                    Foreground="{x:Bind ViewModel.CurrentForeground, Mode=OneWay}"
                    Text="Sorry."
                    TextAlignment="Center" />
                <TextBlock
                    Margin="8,0,8,16"
                    Foreground="{x:Bind ViewModel.CurrentForeground, Mode=OneWay}"
                    Text="{x:Bind ViewModel.ErrorMessage, Mode=OneWay}"
                    TextAlignment="Center" />
                <Button
                    x:Uid="OpenInBrowserButton"
                    HorizontalAlignment="Center"
                    Command="{x:Bind ViewModel.CurrentItem.OpenInBrowserCommand, Mode=OneWay}"
                    Content="Open in browser" />
            </StackPanel>
        </Border>
        <Grid
            x:Name="FormattingOptionsGrid"
            Margin="0,0,0,8"
            VerticalAlignment="Bottom"
            Background="{x:Bind ViewModel.CurrentBackground, Mode=OneWay}"
            x:DeferLoadStrategy="Lazy"
            RenderTransformOrigin="0.5,0.5"
            Visibility="Collapsed">
            <Grid.Resources>
                <Style BasedOn="{StaticResource RoundButtonStyle}" TargetType="Button">
                    <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
                    <Setter Property="FontSize" Value="18" />
                    <Setter Property="MinHeight" Value="48" />
                    <Setter Property="MinWidth" Value="48" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
                <Style TargetType="Rectangle">
                    <Setter Property="Width" Value="1" />
                    <Setter Property="Fill" Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
                    <Setter Property="Margin" Value="12,6" />
                </Style>
            </Grid.Resources>
            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                <Button
                    x:Uid="DecreaseFontSizeButton"
                    Command="{x:Bind ViewModel.DecreaseFontSizeCommand}"
                    Content="&#xE1C6;" />
                <Button
                    x:Uid="IncreaseFontSizeButton"
                    Command="{x:Bind ViewModel.IncreaseFontSizeCommand}"
                    Content="&#xE1C7;" />
                <Rectangle />
                <Button
                    x:Uid="ChangeColorSchemeButton"
                    Command="{x:Bind ViewModel.ChangeColorSchemeCommand}"
                    Content="{x:Bind ViewModel.ColorSchemeButtonContent, Mode=OneWay}" />
                <Button
                    x:Uid="ChangeFontFamilyButton"
                    Command="{x:Bind ViewModel.ChangeFontFamilyCommand}"
                    Content="&#xE8D2;" />
                <Button
                    x:Uid="ChangeTextAlignmentButton"
                    Command="{x:Bind ViewModel.ChangeTextAlignmentCommand}"
                    Content="{x:Bind ViewModel.TextAlignButtonContent, Mode=OneWay}" />
                <Rectangle />
                <Button
                    x:Uid="CloseButton"
                    Click="Button_Click"
                    Content="&#xE10A;" />
            </StackPanel>
        </Grid>
    </Grid>
</Page>