<Page
    x:Class="wallabag.Views.ContentPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:wallabag.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:wallabag.Controls"
    xmlns:vm="using:wallabag.ViewModels"
    xmlns:m="using:wallabag.Models"
    mc:Ignorable="d">
    <Page.Resources>
        <ItemsPanelTemplate x:Name="GridViewTemplate">
            <ItemsWrapGrid Orientation="Horizontal"/>
        </ItemsPanelTemplate>
        <ItemsPanelTemplate x:Name="ListViewTemplate">
            <ItemsStackPanel Orientation="Vertical"/>
        </ItemsPanelTemplate>
        <DataTemplate x:Name="PivotContentTemplate">
            <GridView x:Name="ItemGridView"
        	          ItemsSource="{Binding Items}"
        	          IsItemClickEnabled="{Binding IsChecked, ElementName=multipleSelectToggleButton, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}"
                      Padding="4"
        	          ItemClick="ItemGridView_ItemClick"  
                      SizeChanged="ItemGridView_SizeChanged"
        	          EntranceNavigationTransitionInfo.IsTargetElement="True">
                <GridView.ItemTemplate>
                    <DataTemplate x:DataType="vm:ItemViewModel">
                        <controls:ItemControl/>
                    </DataTemplate>
                </GridView.ItemTemplate>
                <GridView.ItemContainerStyle>
                    <Style TargetType="GridViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </GridView.ItemContainerStyle>
                <GridView.Template>
                    <ControlTemplate TargetType="GridView">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ScrollViewer x:Name="ScrollViewer" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}" ViewChanging="ScrollViewer_ViewChanging">
                                <ItemsPresenter FooterTransitions="{TemplateBinding FooterTransitions}" FooterTemplate="{TemplateBinding FooterTemplate}" Footer="{TemplateBinding Footer}" HeaderTemplate="{TemplateBinding HeaderTemplate}" Header="{TemplateBinding Header}" HeaderTransitions="{TemplateBinding HeaderTransitions}" Padding="{TemplateBinding Padding}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </GridView.Template>
            </GridView>
        </DataTemplate>        
        <Style TargetType="PivotHeaderItem">
            <Setter Property="RequestedTheme" Value="Dark"/>
        </Style>
        <Style TargetType="PivotItem">
            <Setter Property="Margin" Value="0,0,0,48"/>
        </Style>
        <MenuFlyout x:Key="ItemContextMenu">
            <MenuFlyoutItem x:Name="ContextMenuMarkAsRead" Text="Mark as read" Click="ContextMenuMarkAsRead_Click"/>
            <MenuFlyoutItem x:Name="ContextMenuMarkAsFavorite" Text="Mark as favorite" Click="ContextMenuMarkAsFavorite_Click"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Name="ContextMenuShareItem" Text="Share" Click="ContextMenuShareItem_Click"/>
            <MenuFlyoutItem x:Name="ContextMenuOpenInBrowser" Text="Open in browser" Click="ContextMenuOpenInBrowser_Click"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Name="ContextMenuDeleteItem" Text="Delete" Click="ContextMenuDeleteItem_Click"/>
        </MenuFlyout>
    </Page.Resources>
    <Page.DataContext>
        <vm:MainViewModel/>
    </Page.DataContext>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.Setters>
                        <Setter Target="ContentDialogStackPanel.MinWidth" Value="0"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <VisualState.Setters>
                        <Setter Target="ContentDialogStackPanel.MinWidth" Value="450"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <Storyboard x:Name="SyncStoryboard" RepeatBehavior="Forever">
                        <DoubleAnimation Duration="0:0:1" To="360" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="syncIcon" d:IsOptimized="True"/>
                    </Storyboard>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsSyncing}"/>
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <ContentDialog x:Name="AddItemContentDialog" Title="SAVE A LINK" d:IsHidden="True"
                       PrimaryButtonText="Add" PrimaryButtonCommand="{Binding AddItemCommand}"
                       SecondaryButtonText="Cancel" SecondaryButtonCommand="{Binding CancelCommand}">
            <ContentDialog.DataContext>
                <vm:AddItemPageViewModel/>
            </ContentDialog.DataContext>
            <StackPanel x:Name="ContentDialogStackPanel" MinWidth="450" Margin="0,24,0,0">
                <TextBox x:Name="UrlTextBox" Text="{Binding Url, Mode=TwoWay}" PlaceholderText="https://" InputScope="Url"/>
                <controls:TagControl Tags="{Binding Tags, Mode=TwoWay}" Margin="0,12,0,0"/>
            </StackPanel>
        </ContentDialog>
        <Grid Background="{ThemeResource SystemControlBackgroundAccentBrush}" Height="48" VerticalAlignment="Top" RequestedTheme="Dark">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" Margin="0,0,16,0" Grid.Column="1">
                <TextBlock Text="{x:Bind ViewModel.NumberOfOfflineActions, Mode=OneWay}" VerticalAlignment="Center" Margin="8,0" FontWeight="SemiBold"/>
                <TextBlock Text="" FontFamily="Segoe MDL2 Assets" VerticalAlignment="Center" FontSize="24"/>
            </StackPanel>
        </Grid>

        <SplitView PanePlacement="Right" IsPaneOpen="{Binding IsChecked, ElementName=filterToggleButton, Mode=OneWay}">
            <Pivot SelectionChanged="Pivot_SelectionChanged">
                <Pivot.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" Style="{StaticResource PageTitleTextBlockStyle}" Margin="0"/>
                    </DataTemplate>
                </Pivot.HeaderTemplate>
                <PivotItem Header="UNREAD" ContentTemplate="{StaticResource PivotContentTemplate}"/>
                <PivotItem Header="FAVORITES" ContentTemplate="{StaticResource PivotContentTemplate}"/>
                <PivotItem Header="ARCHIVE" ContentTemplate="{StaticResource PivotContentTemplate}"/>
            </Pivot>
            <SplitView.Pane>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <StackPanel Margin="0,48" Padding="8">
                            <ComboBox x:Name="sortOrderComboBox" Header="Sort order" Margin="0,8,0,8" HorizontalAlignment="Stretch" SelectedIndex="1">
                                <ComboBoxItem>Ascending</ComboBoxItem>
                                <ComboBoxItem>Descending</ComboBoxItem>
                            </ComboBox>

                            <ComboBox x:Name="domainNameComboBox" Header="Domain name" Margin="0,0,0,8" HorizontalAlignment="Stretch"
                                      ItemsSource="{x:Bind ViewModel.DomainNames, Mode=OneWay}" SelectedItem="{x:Bind ViewModel.LastUsedFilterProperties.DomainName, Mode=TwoWay}"/>
                            <ComboBox x:Name="tagComboBox" Header="Tag" Margin="0,0,0,8" HorizontalAlignment="Stretch"
                                      ItemsSource="{x:Bind ViewModel.Tags, Mode=OneWay}" SelectedItem="{Binding LastUsedFilterProperties.FilterTag, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate x:DataType="m:Tag">
                                        <StackPanel Orientation="Horizontal">
                                            <Ellipse Fill="{x:Bind Color}" Height="16" Width="16"/>
                                            <TextBlock Text="{x:Bind Label}" VerticalAlignment="Center" Margin="8,0,4,0"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <!-- estimated reading time -->
                            <Grid x:Name="creationDateGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <CalendarDatePicker
                                    x:Name="FromCalendarDatePicker"
                                    HorizontalAlignment="Stretch"
                                    PlaceholderText="from"
                                    Margin="2,0"
                                    Header="Creation date"
                                    Date="{x:Bind ViewModel.LastUsedFilterProperties.CreationDateFrom, Mode=TwoWay}"
                                    MaxDate="{Binding LastUsedFilterProperties.CreationDateTo}"/>
                                <CalendarDatePicker
                                    x:Name="ToCalendarDatePicker"
                                    HorizontalAlignment="Stretch"
                                    PlaceholderText="to"
                                    Grid.Column="1"
                                    Margin="2,0"
                                    Header=" "
                                    Date="{x:Bind ViewModel.LastUsedFilterProperties.CreationDateTo, Mode=TwoWay}"
                                    MinDate="{Binding LastUsedFilterProperties.CreationDateFrom, Mode=OneWay}"
                                    MaxDate="{x:Bind ViewModel.MaxDate}"/>
                            </Grid>
                        </StackPanel>
                    </Grid>
                </ScrollViewer>
            </SplitView.Pane>
        </SplitView>
        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" RequestedTheme="Dark"
                    HorizontalAlignment="Right" Background="{ThemeResource SystemControlBackgroundAccentBrush}"
                    Visibility="{Binding IsChecked, ElementName=searchToggleButton, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <AutoSuggestBox x:Name="SearchBox"
                            QueryIcon="Find"
                            PlaceholderText="Search..."
                            ItemsSource="{x:Bind SearchBoxSuggestions}"
                            TextChanged="SearchBox_TextChanged"
                            Width="300"
                            Margin="8"
                            QuerySubmitted="SearchBox_QuerySubmitted">
                <AutoSuggestBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Value, Mode=OneTime}"/>
                    </DataTemplate>
                </AutoSuggestBox.ItemTemplate>
            </AutoSuggestBox>
            <AppBarToggleButton IsCompact="True" Icon="Filter" x:Name="filterToggleButton"/>
        </StackPanel>
        <CommandBar x:Name="PrimaryCommandBar" VerticalAlignment="Bottom">
            <!-- commands for multiple selection -->
            <AppBarButton x:Name="acceptAppBarButton" Icon="Accept" Visibility="Collapsed" Click="acceptAppBarButton_Click"/>
            <AppBarButton x:Name="favoriteAppBarButton" Icon="Favorite" Visibility="Collapsed" Click="favoriteAppBarButton_Click"/>
            <AppBarButton x:Name="tagAppBarButton" Icon="Tag" Visibility="Collapsed" IsEnabled="False">
                <AppBarButton.Flyout>
                    <Flyout>
                        <controls:TagControl />
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton x:Name="deleteAppBarButton" Icon="Delete" Visibility="Collapsed" Click="deleteAppBarButton_Click"/>
            <!-- default commands -->
            <AppBarToggleButton x:Name="searchToggleButton" Icon="Find" Label="Search"/>
            <AppBarButton x:Name="addItemAppBarButton" Icon="Add" Label="Add item" Click="AddItemButton_Click"/>
            <AppBarButton x:Name="syncAppBarButton" Label="Sync" Command="{Binding RefreshCommand}">
                <AppBarButton.Icon>
                    <SymbolIcon x:Name="syncIcon" Symbol="Sync" RenderTransformOrigin="0.5,0.5">
                        <SymbolIcon.RenderTransform>
                            <CompositeTransform/>
                        </SymbolIcon.RenderTransform>
                    </SymbolIcon>
                </AppBarButton.Icon>
            </AppBarButton>
            <CommandBar.SecondaryCommands>
                <AppBarToggleButton x:Name="multipleSelectToggleButton" 
                                Icon="Bullets" 
                                Label="Select" 
                                Checked="multipleSelectToggleButton_Checked"
                                Unchecked="multipleSelectToggleButton_Unchecked"/>
                <AppBarSeparator/>
                <AppBarButton Icon="Setting" Label="Settings" Command="{Binding NavigateToSettingsPageCommand}"/>
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Grid>
</Page>
