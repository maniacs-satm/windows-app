<Page
    x:Class="wallabag.Views.ContentPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:wallabag.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:wallabag.Controls"
    xmlns:vm="using:wallabag.ViewModels"
    xmlns:m="using:wallabag.Models"
    mc:Ignorable="d">
    <Page.Resources>
        <Storyboard x:Name="SyncStoryboard" RepeatBehavior="Forever">
            <DoubleAnimation Duration="0:0:1" To="360" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="syncIcon" d:IsOptimized="True"/>
        </Storyboard>
    </Page.Resources>
    <Page.DataContext>
        <vm:MainViewModel/>
    </Page.DataContext>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.Setters>
                        <Setter Target="ContentDialogStackPanel.MinWidth" Value="0"/>
                        <Setter Target="ItemListView.Visibility" Value="Visible"/>
                        <Setter Target="ItemGridView.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <VisualState.Setters>
                        <Setter Target="ContentDialogStackPanel.MinWidth" Value="450"/>
                        <Setter Target="ItemListView.Visibility" Value="Collapsed"/>
                        <Setter Target="ItemGridView.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720"/>
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <ContentDialog x:Name="AddItemContentDialog" Title="SAVE A LINK" d:IsHidden="True"
                       PrimaryButtonText="Add" PrimaryButtonCommand="{Binding AddItemCommand}"
                       SecondaryButtonText="Cancel" SecondaryButtonCommand="{Binding CancelCommand}">
            <ContentDialog.DataContext>
                <vm:AddItemPageViewModel/>
            </ContentDialog.DataContext>
            <StackPanel x:Name="ContentDialogStackPanel" MinWidth="450" Margin="0,24,0,0">
                <TextBox x:Name="UrlTextBox" Text="{Binding Url, Mode=TwoWay}" PlaceholderText="https://" InputScope="Url"/>
                <controls:TagControl Tags="{Binding Tags, Mode=TwoWay}" Margin="0,12,0,0"/>
            </StackPanel>
        </ContentDialog>
        <SplitView PanePlacement="Right" IsPaneOpen="{Binding IsChecked, ElementName=filterToggleButton, Mode=OneWay}">
            <Grid>
                <GridView x:Name="ItemGridView"
        	              ItemsSource="{Binding Items}"
        	              IsItemClickEnabled="{Binding IsChecked, ElementName=multipleSelectToggleButton, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}"
                          Padding="8"
                          Margin="0,48"
        	              ItemClick="ItemGridView_ItemClick"                      
        	              EntranceNavigationTransitionInfo.IsTargetElement="True">
                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="vm:ItemViewModel">
                            <controls:ItemControl/>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                </GridView>
                <ListView x:Name="ItemListView"
        	              ItemsSource="{Binding Items}"
        	              IsItemClickEnabled="{Binding IsChecked, ElementName=multipleSelectToggleButton, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}"
                          Margin="0,48"
                          Visibility="Collapsed"
        	              ItemClick="ItemGridView_ItemClick"                      
        	              EntranceNavigationTransitionInfo.IsTargetElement="True">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="vm:ItemViewModel">
                            <controls:ItemControl/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Margin" Value="0,2"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>
            <SplitView.Pane>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="0,48" Padding="8">
                        <AutoSuggestBox x:Name="SearchBox"               
                                 QueryIcon="Find"
                                 PlaceholderText="Search..."
                                 VerticalAlignment="Top"
                                 HorizontalAlignment="Stretch"
                                 ItemsSource="{x:Bind SearchBoxSuggestions}"
                                 TextChanged="SearchBox_TextChanged" Margin="0,0,0,8"
                                 QuerySubmitted="SearchBox_QuerySubmitted"/>

                        <Grid Margin="0,0,0,8">
                            <Grid.Resources>
                                <Style TargetType="RadioButton" BasedOn="{StaticResource IconRadioButtonStyle}">
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="Margin" Value="0"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <RadioButton x:Name="AllItemsFilterRadioButton" Content="" ToolTipService.ToolTip="All" IsChecked="True" Checked="FilterRadioButton_CheckedChanged"/>
                            <RadioButton x:Name="UnreadItemsFilterRadioButton" Content="" ToolTipService.ToolTip="Unread" Checked="FilterRadioButton_CheckedChanged" Grid.Column="1"/>
                            <RadioButton x:Name="StarredItemsFilterRadioButton" Content="" ToolTipService.ToolTip="Favorite" Checked="FilterRadioButton_CheckedChanged" Grid.Column="2"/>
                            <RadioButton x:Name="ArchivedItemsFilterRadioButton" Content="" ToolTipService.ToolTip="Archived" Checked="FilterRadioButton_CheckedChanged" Grid.Column="3"/>
                            <RadioButton x:Name="DeletedItemsFilterRadioButton" Content="" ToolTipService.ToolTip="Deleted" Checked="FilterRadioButton_CheckedChanged" Grid.Column="4"/>
                        </Grid>

                        <ComboBox Header="Sort order" Margin="0,0,0,8" HorizontalAlignment="Stretch" SelectedIndex="0">
                            <ComboBoxItem>Ascending</ComboBoxItem>
                            <ComboBoxItem>Descending</ComboBoxItem>
                        </ComboBox>

                        <Button Style="{StaticResource TextBlockButtonStyle}" Content="Show more" Visibility="Collapsed"/>
                        <!-- TODO: Display the following options only after button click-->
                        <ComboBox Header="Domain name" Margin="0,0,0,8" HorizontalAlignment="Stretch"
                                  ItemsSource="{Binding DomainNames}" SelectedItem="{Binding FilterProperties.DomainName, Mode=TwoWay}"/>
                        <ComboBox Header="Tag" Margin="0,0,0,8" HorizontalAlignment="Stretch"
                                  ItemsSource="{Binding Tags}" SelectedItem="{Binding FilterProperties.FilterTag, Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate x:DataType="m:Tag">
                                    <StackPanel Orientation="Horizontal">
                                        <Ellipse Fill="{x:Bind Color}" Height="16" Width="16"/>
                                        <TextBlock Text="{x:Bind Label}" VerticalAlignment="Center" Margin="8,0,4,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <!-- estimated reading time -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <CalendarDatePicker x:Name="FromCalendarDatePicker" HorizontalAlignment="Stretch" PlaceholderText="from" Margin="2,0" Header="Creation date" Date="{x:Bind ViewModel.FilterProperties.CreationDateFrom, Mode=TwoWay}" MaxDate="{Binding FilterProperties.CreationDateTo}"/>
                            <CalendarDatePicker x:Name="ToCalendarDatePicker" HorizontalAlignment="Stretch" PlaceholderText="to" Grid.Column="1" Margin="2,0" Header=" " Date="{x:Bind ViewModel.FilterProperties.CreationDateTo, Mode=TwoWay}" MaxDate="{x:Bind ViewModel.MaxDate}"/>
                        </Grid>
                        <Grid Margin="0,8,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="resetButton" Command="{Binding ResetCommand}" Content="RESET" HorizontalAlignment="Stretch" Margin="2,0"/>
                            <Button x:Name="filterButton" Command="{Binding FilterCommand}" Style="{ThemeResource ActionButtonStyle}" Content="FILTER" Margin="2,0" Grid.Column="1"/>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
            </SplitView.Pane>
        </SplitView>
        <Grid Background="{ThemeResource SystemControlBackgroundAccentBrush}" Height="48" VerticalAlignment="Top" RequestedTheme="Dark">
            <TextBlock Text="ITEMS" Style="{ThemeResource PageTitleTextBlockStyle}" VerticalAlignment="Top"/>
        </Grid>
        <CommandBar x:Name="PrimaryCommandBar" VerticalAlignment="Bottom">
            <!-- commands for multiple selection -->
            <AppBarButton x:Name="acceptAppBarButton" Icon="Accept" Visibility="Collapsed" Click="acceptAppBarButton_Click"/>
            <AppBarButton x:Name="favoriteAppBarButton" Icon="Favorite" Visibility="Collapsed" Click="favoriteAppBarButton_Click"/>
            <AppBarButton x:Name="tagAppBarButton" Icon="Tag" Visibility="Collapsed" IsEnabled="False">
                <AppBarButton.Flyout>
                    <Flyout>
                        <controls:TagControl />
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton x:Name="deleteAppBarButton" Icon="Delete" Visibility="Collapsed" Click="deleteAppBarButton_Click"/>
            <!-- default commands -->
            <AppBarToggleButton x:Name="filterToggleButton" Icon="Filter" Label="Filter"/>
            <AppBarButton x:Name="addItemAppBarButton" Icon="Add" Label="Add item" Click="AddItemButton_Click"/>
            <AppBarButton x:Name="syncAppBarButton" Label="Sync" Command="{Binding RefreshCommand}">
                <AppBarButton.Icon>
                    <SymbolIcon x:Name="syncIcon" Symbol="Sync" RenderTransformOrigin="0.5,0.5">
                        <SymbolIcon.RenderTransform>
                            <CompositeTransform/>
                        </SymbolIcon.RenderTransform>
                    </SymbolIcon>
                </AppBarButton.Icon>
            </AppBarButton>
            <CommandBar.SecondaryCommands>
                <AppBarToggleButton x:Name="multipleSelectToggleButton" 
                                Icon="Bullets" 
                                Label="Select" 
                                Checked="multipleSelectToggleButton_Checked"
                                Unchecked="multipleSelectToggleButton_Unchecked"/>
                <AppBarSeparator/>
                <AppBarButton Icon="Setting" Label="Settings" Command="{Binding NavigateToSettingsPageCommand}"/>
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Grid>
</Page>
